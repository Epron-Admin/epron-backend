{"version":3,"file":"server.js","names":["dotenv","config","app","express","connectDB","port","process","env","PORT","use","cors","options","bodyParser","json","urlencoded","extended","accessRouter","userRouter","pickupRouter","epronRouter","recyclersRouter","collectionRouter","uploadRouter","req","res","send","server","listen","console","log","NODE_ENV"],"sources":["../src/server.js"],"sourcesContent":["import express from 'express';\nimport cors from 'cors';\nimport bodyParser from 'body-parser';\n// import mongoose from 'mongoose';\nimport connectDB from './config/db.js';\n// import balocodes from 'balocodes/express';\n// const accessRouter = require('./controllers/access/access.router.js');\n// const userRouter = require('./controllers/users/users.router.js');\n\n\nimport accessRouter from './controllers/access/access.router.js';\nimport userRouter from './controllers/users/users.router.js';\nimport pickupRouter from './controllers/requestpickup/pickups.router.js';\nimport epronRouter from './controllers/epron/epron.router.js';\nimport recyclersRouter from './controllers/recyclers/recyclers.router.js';\nimport collectionRouter from './controllers/collectioncenter/collection.router.js';\nimport uploadRouter from './uploads.js';\nimport dotenv from 'dotenv';\n// import uploadRouter from './sr./uploads.jsmport uploadRouter from './upload';\n// import verifier from 'email-verifier';\n\n//Load config files\ndotenv.config();\n// dotenv.config({ path: './config/config.env'});\n\n\nconst app = express();\n\nconnectDB();\nconst port = process.env.PORT || 3000;\n\napp.use(cors());\napp.options('*', cors);\napp.use(bodyParser.json());\napp.use(express.json());\napp.use(express.urlencoded({ extended: true }));\n\napp.use('/access', accessRouter);\napp.use('/user', userRouter); \napp.use('/pickup', pickupRouter); \napp.use('/epron', epronRouter); \napp.use('/recyclers', recyclersRouter);\napp.use('/centers', collectionRouter); \napp.use('/upload', uploadRouter);\n\napp.use('*', function (req, res) {\n\tres.send('Welcome to Epron Backend, route not found');\n});\n\n\nconst server = app.listen(port, () => console.log(`Express server running in ${process.env.NODE_ENV} mode on port ${port}`)); \n\nexport default server\n\n// module.exports = server;"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AAMA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAdA;AAEA;AACA;AACA;AAWA;AACA;AAEA;AACAA,kBAAA,CAAOC,MAAP,G,CACA;;;AAGA,IAAMC,GAAG,GAAG,IAAAC,mBAAA,GAAZ;AAEA,IAAAC,cAAA;AACA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;AAEAN,GAAG,CAACO,GAAJ,CAAQ,IAAAC,gBAAA,GAAR;AACAR,GAAG,CAACS,OAAJ,CAAY,GAAZ,EAAiBD,gBAAjB;AACAR,GAAG,CAACO,GAAJ,CAAQG,sBAAA,CAAWC,IAAX,EAAR;AACAX,GAAG,CAACO,GAAJ,CAAQN,mBAAA,CAAQU,IAAR,EAAR;AACAX,GAAG,CAACO,GAAJ,CAAQN,mBAAA,CAAQW,UAAR,CAAmB;EAAEC,QAAQ,EAAE;AAAZ,CAAnB,CAAR;AAEAb,GAAG,CAACO,GAAJ,CAAQ,SAAR,EAAmBO,wBAAnB;AACAd,GAAG,CAACO,GAAJ,CAAQ,OAAR,EAAiBQ,uBAAjB;AACAf,GAAG,CAACO,GAAJ,CAAQ,SAAR,EAAmBS,yBAAnB;AACAhB,GAAG,CAACO,GAAJ,CAAQ,QAAR,EAAkBU,uBAAlB;AACAjB,GAAG,CAACO,GAAJ,CAAQ,YAAR,EAAsBW,2BAAtB;AACAlB,GAAG,CAACO,GAAJ,CAAQ,UAAR,EAAoBY,4BAApB;AACAnB,GAAG,CAACO,GAAJ,CAAQ,SAAR,EAAmBa,mBAAnB;AAEApB,GAAG,CAACO,GAAJ,CAAQ,GAAR,EAAa,UAAUc,GAAV,EAAeC,GAAf,EAAoB;EAChCA,GAAG,CAACC,IAAJ,CAAS,2CAAT;AACA,CAFD;AAKA,IAAMC,MAAM,GAAGxB,GAAG,CAACyB,MAAJ,CAAWtB,IAAX,EAAiB;EAAA,OAAMuB,OAAO,CAACC,GAAR,qCAAyCvB,OAAO,CAACC,GAAR,CAAYuB,QAArD,2BAA8EzB,IAA9E,EAAN;AAAA,CAAjB,CAAf;eAEeqB,M,EAEf"}