{"version":3,"file":"FakeUser.model.js","names":["Schema","mongoose","newUser","name","type","String","required","email","unique","index","phoneNumber","collection_center","Types","ObjectId","ref","address","state","lga","lat","verified","Boolean","role","epron_admin","blocked","password","verifyToken","verifyTokenExpires","Date","resetPasswordToken","resetPasswordExpires","created_at","once","now","updated_at","statics","hashPassword","bcrypt","hashSync","methods","isValid","hashedpassword","compareSync","model"],"sources":["../../src/models/FakeUser.model.js"],"sourcesContent":["import mongoose from 'mongoose';\nimport bcrypt from 'bcrypt';\n\n\n\nconst Schema = mongoose.Schema;\n\nlet newUser = new Schema({\n    name: {\n        type: String,\n        required: true\n    },\n    email: {\n        type: String,\n        unique: true,\n        required: true,\n        index: true\n    },\n    phoneNumber: {\n        type: String,\n        required: true\n    },\n    collection_center: [{\n        type: Schema.Types.ObjectId,\n        ref:'CollectionCenter',\n    }],\n    // country: {\n    //     type: String,\n    // },\n    // countryid: {\n    //     type: String,\n    // },\n    \n    address: {\n        type: String,\n    },\n    state: {\n        type: String,\n    },\n    lga: {\n        type: String,\n    },\n    lat: {\n        type: String,\n    },\n    verified: {\n        type: Boolean,\n        default: false\n    },\n    role: {\n        type: String,\n        required: true\n        // default: 'user'\n    },\n    epron_admin: {\n        type: String,\n        default: null\n    },\n    blocked: {\n        type: Boolean,\n        default: false\n    },\n    password: {\n        type: String,\n        required: true\n    },\n    verifyToken: {\n        type: String\n    },\n    verifyTokenExpires: {\n        type: Date\n    },\n    resetPasswordToken: {\n        type: String\n    },\n    resetPasswordExpires: {\n        type: Date\n    },\n    created_at: {\n        type: Date, once: true, default: Date.now\n    },\n    updated_at: {\n        type: Date, default: Date.now\n    }\n});\n\n\nnewUser.statics.hashPassword = function hashPassword(password){\n    return bcrypt.hashSync(password, 10);\n};\n\n\nnewUser.methods.isValid = function(hashedpassword){\n    return bcrypt.compareSync(hashedpassword, this.password);\n};\n\n\n\nexport default mongoose.model('FakeUser', newUser);"],"mappings":";;;;;;;;;AAAA;;AACA;;AAIA,IAAMA,MAAM,GAAGC,oBAAA,CAASD,MAAxB;AAEA,IAAIE,OAAO,GAAG,IAAIF,MAAJ,CAAW;EACrBG,IAAI,EAAE;IACFC,IAAI,EAAEC,MADJ;IAEFC,QAAQ,EAAE;EAFR,CADe;EAKrBC,KAAK,EAAE;IACHH,IAAI,EAAEC,MADH;IAEHG,MAAM,EAAE,IAFL;IAGHF,QAAQ,EAAE,IAHP;IAIHG,KAAK,EAAE;EAJJ,CALc;EAWrBC,WAAW,EAAE;IACTN,IAAI,EAAEC,MADG;IAETC,QAAQ,EAAE;EAFD,CAXQ;EAerBK,iBAAiB,EAAE,CAAC;IAChBP,IAAI,EAAEJ,MAAM,CAACY,KAAP,CAAaC,QADH;IAEhBC,GAAG,EAAC;EAFY,CAAD,CAfE;EAmBrB;EACA;EACA;EACA;EACA;EACA;EAEAC,OAAO,EAAE;IACLX,IAAI,EAAEC;EADD,CA1BY;EA6BrBW,KAAK,EAAE;IACHZ,IAAI,EAAEC;EADH,CA7Bc;EAgCrBY,GAAG,EAAE;IACDb,IAAI,EAAEC;EADL,CAhCgB;EAmCrBa,GAAG,EAAE;IACDd,IAAI,EAAEC;EADL,CAnCgB;EAsCrBc,QAAQ,EAAE;IACNf,IAAI,EAAEgB,OADA;IAEN,WAAS;EAFH,CAtCW;EA0CrBC,IAAI,EAAE;IACFjB,IAAI,EAAEC,MADJ;IAEFC,QAAQ,EAAE,IAFR,CAGF;;EAHE,CA1Ce;EA+CrBgB,WAAW,EAAE;IACTlB,IAAI,EAAEC,MADG;IAET,WAAS;EAFA,CA/CQ;EAmDrBkB,OAAO,EAAE;IACLnB,IAAI,EAAEgB,OADD;IAEL,WAAS;EAFJ,CAnDY;EAuDrBI,QAAQ,EAAE;IACNpB,IAAI,EAAEC,MADA;IAENC,QAAQ,EAAE;EAFJ,CAvDW;EA2DrBmB,WAAW,EAAE;IACTrB,IAAI,EAAEC;EADG,CA3DQ;EA8DrBqB,kBAAkB,EAAE;IAChBtB,IAAI,EAAEuB;EADU,CA9DC;EAiErBC,kBAAkB,EAAE;IAChBxB,IAAI,EAAEC;EADU,CAjEC;EAoErBwB,oBAAoB,EAAE;IAClBzB,IAAI,EAAEuB;EADY,CApED;EAuErBG,UAAU,EAAE;IACR1B,IAAI,EAAEuB,IADE;IACII,IAAI,EAAE,IADV;IACgB,WAASJ,IAAI,CAACK;EAD9B,CAvES;EA0ErBC,UAAU,EAAE;IACR7B,IAAI,EAAEuB,IADE;IACI,WAASA,IAAI,CAACK;EADlB;AA1ES,CAAX,CAAd;;AAgFA9B,OAAO,CAACgC,OAAR,CAAgBC,YAAhB,GAA+B,SAASA,YAAT,CAAsBX,QAAtB,EAA+B;EAC1D,OAAOY,kBAAA,CAAOC,QAAP,CAAgBb,QAAhB,EAA0B,EAA1B,CAAP;AACH,CAFD;;AAKAtB,OAAO,CAACoC,OAAR,CAAgBC,OAAhB,GAA0B,UAASC,cAAT,EAAwB;EAC9C,OAAOJ,kBAAA,CAAOK,WAAP,CAAmBD,cAAnB,EAAmC,KAAKhB,QAAxC,CAAP;AACH,CAFD;;eAMevB,oBAAA,CAASyC,KAAT,CAAe,UAAf,EAA2BxC,OAA3B,C"}