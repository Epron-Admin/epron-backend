{"version":3,"file":"User.model.js","names":["Schema","mongoose","newUser","name","type","String","required","email","unique","index","phoneNumber","collection_center","Types","ObjectId","ref","country","countryid","stateid","city","cityid","address","state","lga","lat","verified","Boolean","role","collection_center_assigned","epron_admin","blocked","approved_documents","password","verifyToken","verifyTokenExpires","Date","resetPasswordToken","resetPasswordExpires","created_at","once","now","updated_at","statics","hashPassword","bcrypt","hashSync","methods","isValid","hashedpassword","compareSync","model"],"sources":["../../src/models/User.model.js"],"sourcesContent":["import mongoose from 'mongoose';\nimport bcrypt from 'bcrypt';\n\n\n\nconst Schema = mongoose.Schema;\n\nlet newUser = new Schema({\n    name: {\n        type: String,\n        required: true\n    },\n    email: {\n        type: String,\n        unique: true,\n        required: true,\n        index: true\n    },\n    phoneNumber: {\n        type: String,\n        required: true\n    },\n    collection_center: [{\n        type: Schema.Types.ObjectId,\n        ref:'User',\n    }],\n    country: {\n        type: String,\n    },\n    countryid: {\n        type: String,\n    },\n    stateid: {\n        type: String,\n    },\n    city: {\n        type: String,\n    },\n    cityid: {\n        type: String,\n    },\n    address: {\n        type: String,\n    },\n    state: {\n        type: String,\n    },\n    lga: {\n        type: String,\n    },\n    lat: {\n        type: String,\n    },\n    verified: {\n        type: Boolean,\n        default: false\n    },\n    role: {\n        type: String,\n        required: true\n        // default: 'user'\n    },\n    collection_center_assigned: {\n        type: Boolean,\n        default: false\n    },\n    epron_admin: {\n        type: String,\n        default: null\n    },\n    blocked: {\n        type: Boolean,\n        default: false\n    },\n    approved_documents: {\n        type: Boolean,\n        default: false\n    },\n    password: {\n        type: String,\n        required: true\n    },\n    verifyToken: {\n        type: String\n    },\n    verifyTokenExpires: {\n        type: Date\n    },\n    resetPasswordToken: {\n        type: String\n    },\n    resetPasswordExpires: {\n        type: Date\n    },\n    created_at: {\n        type: Date, once: true, default: Date.now\n    },\n    updated_at: {\n        type: Date, default: Date.now\n    }\n});\n\n\nnewUser.statics.hashPassword = function hashPassword(password){\n    return bcrypt.hashSync(password, 10);\n};\n\n\nnewUser.methods.isValid = function(hashedpassword){\n    return bcrypt.compareSync(hashedpassword, this.password);\n};\n\n\n// newUser.index({\n//     name: 1,\n//     email: 1\n// });\nnewUser.index({ name : 'text', email : 'text' });\n\n // when its a nested array;\n\n// newUser.index({ 'arrayName.fieldname':'text'});\n\n// For wild card with index array\n// movieSchema.index({ \"$**\" : \"text\" })\n\n// For While card indexing\n// newUser.index({'$**': 'text'});\n\n\n\nexport default mongoose.model('User', newUser);"],"mappings":"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"}