{"version":3,"file":"Log.model.js","names":["Schema","mongoose","logEquipment","category_id","type","Types","ObjectId","ref","required","sub_category_id","quantity","Number","unit","String","weight","user_id","total","price","unit_weight","payment_id","paid","Boolean","equipment_pin","pickedup","reference","ready_pickup","created_at","Date","once","now","updated_at","model"],"sources":["../../src/models/Log.model.js"],"sourcesContent":["import mongoose from 'mongoose';\n\n\nconst Schema = mongoose.Schema;\n\nlet logEquipment = new Schema({\n    category_id: {\n        type: Schema.Types.ObjectId,\n        ref:'Category',\n        required: true\n    },\n    sub_category_id: {\n        type: Schema.Types.ObjectId,\n        ref:'CategoryTypes',\n        required: true\n    },\n    quantity: {\n        type: Number,\n        required: true\n    },\n    unit: {\n        type: String,\n        // required: true\n    },\n    weight: {\n        type: Number,\n        // required: true\n    },\n    user_id: {\n        type: Schema.Types.ObjectId,\n        ref:'User',\n        required: true\n    },\n    total: {\n        type: Number,\n        required: true\n    },\n    price: {\n        type: Number,\n        required: true\n    },\n    // unit_price: {\n    //     type: Number,\n    //     // required: true\n    // },\n    unit_weight: {\n        type: Number,\n        // required: true\n    },\n    payment_id: {\n        type: String,\n    },\n    paid: {\n        type: Boolean,\n        default: false,\n        // required: true\n    },\n    equipment_pin: {\n        type: String,\n        // required: true,\n    },\n    pickedup: {\n        type: Boolean,\n        default: false,\n    },\n    reference: {\n        type: String,\n    },\n    ready_pickup: {\n        type: Boolean,\n        default: false,\n    },\n    created_at: {\n        type: Date, once: true, default: Date.now\n    },\n    updated_at: {\n        type: Date, default: Date.now\n    }\n});\n\n\n// logEquipment.index({\n//     user_id: 1,\n//     // email: 1\n// });\n\n// logEquipment.index({'$**': 'text'});\n\n\nexport default mongoose.model('Log', logEquipment);\n// remember to change it to logEquipment on deployment."],"mappings":";;;;;;;;;AAAA;;AAGA,IAAMA,MAAM,GAAGC,oBAAA,CAASD,MAAxB;AAEA,IAAIE,YAAY,GAAG,IAAIF,MAAJ,CAAW;EAC1BG,WAAW,EAAE;IACTC,IAAI,EAAEJ,MAAM,CAACK,KAAP,CAAaC,QADV;IAETC,GAAG,EAAC,UAFK;IAGTC,QAAQ,EAAE;EAHD,CADa;EAM1BC,eAAe,EAAE;IACbL,IAAI,EAAEJ,MAAM,CAACK,KAAP,CAAaC,QADN;IAEbC,GAAG,EAAC,eAFS;IAGbC,QAAQ,EAAE;EAHG,CANS;EAW1BE,QAAQ,EAAE;IACNN,IAAI,EAAEO,MADA;IAENH,QAAQ,EAAE;EAFJ,CAXgB;EAe1BI,IAAI,EAAE;IACFR,IAAI,EAAES,MADJ,CAEF;;EAFE,CAfoB;EAmB1BC,MAAM,EAAE;IACJV,IAAI,EAAEO,MADF,CAEJ;;EAFI,CAnBkB;EAuB1BI,OAAO,EAAE;IACLX,IAAI,EAAEJ,MAAM,CAACK,KAAP,CAAaC,QADd;IAELC,GAAG,EAAC,MAFC;IAGLC,QAAQ,EAAE;EAHL,CAvBiB;EA4B1BQ,KAAK,EAAE;IACHZ,IAAI,EAAEO,MADH;IAEHH,QAAQ,EAAE;EAFP,CA5BmB;EAgC1BS,KAAK,EAAE;IACHb,IAAI,EAAEO,MADH;IAEHH,QAAQ,EAAE;EAFP,CAhCmB;EAoC1B;EACA;EACA;EACA;EACAU,WAAW,EAAE;IACTd,IAAI,EAAEO,MADG,CAET;;EAFS,CAxCa;EA4C1BQ,UAAU,EAAE;IACRf,IAAI,EAAES;EADE,CA5Cc;EA+C1BO,IAAI,EAAE;IACFhB,IAAI,EAAEiB,OADJ;IAEF,WAAS,KAFP,CAGF;;EAHE,CA/CoB;EAoD1BC,aAAa,EAAE;IACXlB,IAAI,EAAES,MADK,CAEX;;EAFW,CApDW;EAwD1BU,QAAQ,EAAE;IACNnB,IAAI,EAAEiB,OADA;IAEN,WAAS;EAFH,CAxDgB;EA4D1BG,SAAS,EAAE;IACPpB,IAAI,EAAES;EADC,CA5De;EA+D1BY,YAAY,EAAE;IACVrB,IAAI,EAAEiB,OADI;IAEV,WAAS;EAFC,CA/DY;EAmE1BK,UAAU,EAAE;IACRtB,IAAI,EAAEuB,IADE;IACIC,IAAI,EAAE,IADV;IACgB,WAASD,IAAI,CAACE;EAD9B,CAnEc;EAsE1BC,UAAU,EAAE;IACR1B,IAAI,EAAEuB,IADE;IACI,WAASA,IAAI,CAACE;EADlB;AAtEc,CAAX,CAAnB,C,CA4EA;AACA;AACA;AACA;AAEA;;eAGe5B,oBAAA,CAAS8B,KAAT,CAAe,KAAf,EAAsB7B,YAAtB,C,EACf"}