{"version":3,"file":"epron.controllers.js","names":["bigshit","new_category","req","res","body","name","status","send","error","message","code","Math","random","toString","slice","category","Category","category_code","created_at","Date","now","updated_at","findOne","exec","err","doc","next","save","then","result","json","console","log","fetch_all_categories","find","categories","update_category","findById","params","id","new_sub_cateory","category_id","price","types","Types","type_code","type","fetch_all_sub_categories","fetch_all_sub_categories_by_categoryid","update_sub_category","sub_category","remove_log_category","findByIdAndRemove","_id","deleteMany","info","remove_unverified_user","User","verified","user","remove_log_type","fetch_all_users","page","parseInt","query","limit","startIndex","endIndex","results","countDocuments","total_users","total_verified_users","blocked","total_blocked_users","previous","sort","skip","users","verified_users","blocked_users","pagination","reg_user_erpon","email","phoneNumber","password","epron_admin","hashPassword","role","dataRes","async","waterfall","done","crypto","randomBytes","buf","token","verifyToken","verifyTokenExpires","mailTransporter","nodemailer","createTransport","service","auth","pass","mailDetails","from","to","subject","text","sendMail","data","fetch_users_loged_equiptment_oem","Log","total_equipment_logged","paid","total_number_paid","populate","equipment","log_weight","reduce","previousValue","currentValue","weight","value","filter","total_payment_made","total","value2","total_unpaid","number_of_unpaid","total_logged_equipment_paid","unpaid_log_number","unpaid_payment","total_logged_eqiupment","total_weight_logged","fetch_user_loged_equiptment_paid_status_oem","fetch_all_admin_users","block_user","unblock_user","fetch_all_loged_ewaste","Ewaste","total_ewaste","pickedup","total_pickedup","total_unpickedup","ready_pickup","total_ready_for_pickup","total_not_ready_for_pickup","ewaste","total_ewaste_weight","remove_recycler_to_collection_center","Collection","user_id","collector_user_id","center","index","recyclers","indexOf","recycler_user_id","length","splice","fetch_collection_center_byId","fetch_all_pickups_accepted","RequestPickup","accept_request","total_pickups","requestpickup","requests","find_all_collection_center","total_centers","fetch_all_pickup_based_on_acceptance","accepted","find_all_user_based_on_verified_status","fetch_logewaste_weight_by_recyclers","RecyclerWaste","total_ewaste_logged","waste_weight","total_logged_ewaste","total_weight_logged_ton","fetch_logewaste_weight_by_recyclers_id","recycler_id","asign_collection_center_to_recyclers","collection_center","err2","collection_center_assigned","includes","push","remove_collection_center_recycler_user","fetch_recyclers_with_colection_center","approved_documents_oem","approved_documents","disapprove_documents_oem","dashboard_counts","logged_eqiupment_weight","el","total_payment_reciceved","waste","logged_collection_center_waste_weight","recycler_waste","logged_recycler_waste_weight","manufacturers","collectors","admin","unverified_recyclers","unverified_manufacturers","unverified_collectors","toal_requested_pickups","manufacturers_logged_ewaste_weight","round","collection_centers_logged_ewaste_weight","recyclers_logged_ewaste_weight","search_user_varibles","search","$or","$regex","$options","search_logged_equipment_with_varibles","$text","$search","$diacriticSensitive","score","$meta","find_user_by_date_range","startDate","endDate","$gte","setHours","$lt","find_user_by_specific_date","actualDate","find_equipment_by_date_range","total_equipments","equipments","search_ewaste_by_date_range","total_ewastes","search_recyclerEwaste_by_date_range","total_recyclerEwastes","search_requestedPickups_by_date_range","total_requestedPickups","requestedPickups"],"sources":["../../../src/controllers/epron/epron.controllers.js"],"sourcesContent":["\nimport Category from '../../models/Category.model.js';\nimport Types from '../../models/CategoryTypes.model.js';\nimport User from '../../models/User.model.js'\nimport Ewaste from '../../models/Ewaste.model.js';\nimport console from 'console';\nimport nodemailer from 'nodemailer';\nimport crypto from 'crypto';\nimport async from 'async';\n// import Collection from '../../models/CollectionCenter.model.js';\nimport RequestPickup from '../../models/RequestPickup.model.js';\nimport RecyclerWaste from '../../models/RecyclerWaste.model.js'\nimport Log from '../../models/Log.model.js';\n\n// import querystring from 'querystring';\n// const querystring = require('querystring');\n\n// import Fake from '../../models/FakeUser.model.js'; // remove this import\n\n\n// var logged_eqiupment_weight;\n\nlet bigshit;\n \n\n\nexport const new_category = (req, res) => {\n    if (!req.body.name) {\n        // console.log(\"All not filled\");\n        return res.status(401).send({error: true, message: \"Name is required\"});\n    }  \n    const code = Math.random().toString(36).slice(2, 7);\n    let category = new Category({\n        name: req.body.name,\n        category_code: code,\n        created_at: Date.now(),\n        updated_at: Date.now()\n\n    });\n    Category.findOne({ name: req.body.name }).exec((err, doc, next) => {\n        if (err) {\n            return res.status(401).send({error: true, code: 401, message: \"An error occcured\"});\n        }\n        if (doc) {\n            return res.send({error: true, message: 'Category already exists.'});\n        }\n        category.save().then(result => {\n            res.json({error: false, code: 201, status: 'success', message: 'category created successfuly', 'category': result });\n            // res.status(200).send({mssage: 'Category created successful'});\n        }).catch(err => {\n            console.log(err.code);\n            res.send({ error: true, message: 'failed to add data' });\n        });\n    })\n}\n\nexport const fetch_all_categories = (req, res) => {\n    Category.find({}).exec((err, category) => {\n        if (err) {\n            console.log(err);\n            return res.send({error: true, code: 401, message: \"Failed to fetch all categories\"});\n            // return res.send(err);\n        }\n        return res.json({error: false, code: 201, status: 'success', message: 'fetch all categories', categories: category });\n        // res.send(category);\n        console.log(category);\n    });\n}\n\nexport const update_category = async (req, res) => {\n    if (!req.body.name) {\n        return res.status(401).send({error: true, message: \"Name is required\"});\n    } \n    Category.findById(req.params.id, (err, category) => {\n        if (err) {\n            console.log(err);\n        }\n        if (!category) {\n            return res.status(404).send({error: true, message: \"Could not find category\"});\n        }   \n        else {\n            category.name = req.body.name,\n            category.updated_at = Date.now()\n            category.save().then(result => {\n                res.status(201).json({category: result, error: false, message: \"Category update successful\" });\n                // res.json({ 'log': result });\n                //res.status(200).send({mssage: 'update successful'});\n            }).catch(err => {\n                console.log(err);\n                res.send({ error: true, message: 'failed to update logged equipment' });\n            });\n        }\n        \n    });\n}\n\n\n\nexport const new_sub_cateory = (req, res) => {\n    //  console.log(\"reqquests\", req.body);\n    if ((!req.body.name) || (!req.body.category_id) || (!req.body.price)) {\n        return res.status(401).send({error: true, message: \"Name and category id are required\"});\n    } \n    const code = Math.random().toString(36).slice(2, 7);\n    let types = new Types({\n        name: req.body.name,\n        price: req.body.price,\n        type_code: code,\n        category_id: req.body.category_id,\n        created_at: Date.now(),\n        updated_at: Date.now()\n\n    });\n    Types.findOne({ name: req.body.name }).exec((err, doc, next) => {\n        if (err) {\n            return res.status(401).send({error: true, code: 401, message: \"An error occcured\"});\n        }\n        if (doc) {\n            return res.send({error: true, message: 'sub category name already exists.'});\n        }\n        // let id = types.category_id;\n        types.save().then(result => {\n            return res.json({error: false, code: 201, status: 'success', message: 'type category created successfuly', type: result });\n        }).catch(err => {\n            console.log(err);\n            return res.send({ error: true, message: 'failed to add data' });\n        });\n    })\n}\n\nexport const fetch_all_sub_categories = (req, res) => {\n    Types.find({}).exec((err, types) => {\n        if (err) {\n            console.log(err);\n            return res.send({error: true, code: 401, message: \"Failed to fetch all types\"});\n            // return res.send(err);\n        }\n        return res.json({error: false, code: 201, status: 'success', message: 'fetch all categories', types: types });\n        // res.send(category);\n    });\n}\n\nexport const fetch_all_sub_categories_by_categoryid = (req, res) => {\n    Types.find({category_id: req.params.id}).exec((err, types) => {\n        if (err) {\n            console.log(err);\n            return res.send({error: true, code: 401, message: \"Failed to fetch all types based on category\"});\n            // return res.send(err);\n        }\n        return res.json({error: false, code: 201, status: 'success', message: 'fetch all types based on category', types: types });\n        // res.send(category);\n    });\n}\n\n\n// export const fetch_sub_categories = (req, res) => {\n//     Types.findById(req.params.id).populate('category').exec((err, types) => {\n//         if (err) {\n//             console.log(err);\n//             return res.send(err);\n//         }\n//         res.send(types);\n\n//     });\n// }\n\nexport const update_sub_category = async (req, res) => {\n    if ((!req.body.name) || (!req.body.category_id) || (!req.body.price)) {\n        return res.status(401).send({error: true, message: \"Name and category id are required\"});\n    } \n    Types.findById(req.params.id, (err, types) => {\n        if (err) {\n            console.log(err);\n        }\n        if (!types) {\n            return res.status(404).send({error: true, message: \"Could not find sub category\"});\n        }   \n        else {\n            \n            Types.findOne({ name: req.body.name }).exec((err, doc, next) => {\n                if (err) {\n                    return res.status(401).send({error: true, code: 401, message: \"An error occcured\"});\n                }\n                if (doc) {\n                    return res.send({error: true, message: 'sub category name already exists.'});\n                }\n                types.name = req.body.name,\n                types.price = req.body.price,\n                types.category_id = req.body.category_id,\n                types.updated_at = Date.now()\n                types.save().then(result => {\n                    res.status(201).json({sub_category: result, error: false, message: \"Sub category update successful\" });\n                    // res.json({ 'log': result });\n                    //res.status(200).send({mssage: 'update successful'});\n                }).catch(err => {\n                    console.log(err);\n                    res.send({ error: true, message: 'failed to update sub category' });\n                });\n\n            });\n\n            \n        }\n        \n    });\n}\n\nexport const remove_log_category = (req, res) => {\n    Category.findByIdAndRemove({ _id: req.params.id }, (err, log) => {\n        if (err) {\n            return res.json({error: true, status: 401, message: \"failed to delete category\"});\n        }\n        if (!log) {\n            return res.json({error: true, status: 404, message: \"can not find category\"});\n        }\n        else {\n            Types.deleteMany({category_id: req.params.id}).exec((err, doc, next) => {\n                if (doc) {\n                    return res.send({error: true, message: 'success!', info: 'the deleted category has a sub category which has been deleted too'});\n                } else {\n                    return res.json({error: false, status: 201, message: \"success!\" });\n                }\n            });\n        }\n    });\n}\n\nexport const remove_unverified_user = (req, res) => {\n    User.findByIdAndRemove({ _id: req.params.id, verified: false }, (err, user) => {\n        if (err) {\n            return res.json({error: true, status: 401, message: \"failed to delete category\"});\n        }\n        if (!user) {\n            return res.json({error: true, status: 404, message: \"can not find user\"});\n        }\n        if (user.verified === true) {\n            return res.json({error: true, status: 404, message: \"this user is already verified\"});\n        }\n        else {\n            return res.json({error: false, status: 201, message: \"user removed\"});\n        }\n    });\n}\n\nexport const remove_log_type = (req, res) => {\n    Types.findByIdAndRemove({ _id: req.params.id }, (err, type) => {\n        if (err) {\n            return res.json({error: true, status: 401, message: \"failed to delete category type\"});\n        }\n        if (!type) {\n            return res.json({error: true, status: 404, message: \"can not find sub category\"});\n        }\n        else {\n            return res.json({error: false, status: 201, message: \"success!\" });\n        }\n    });\n}\n\n\n\n\nexport const fetch_all_users = async (req, res) => {\n    const page = parseInt(req.query.page);\n    const limit = parseInt(req.query.limit);\n    const startIndex = (page - 1) * limit;\n    const endIndex = page * limit;\n    const results = {};\n    const total_users = await User.countDocuments().exec();\n    const total_verified_users = await User.countDocuments({verified: true}).exec();\n    const total_blocked_users = await User.countDocuments({blocked: true}).exec();\n\n    if (endIndex <  await User.countDocuments().exec()) {\n        results.next = {\n            page: page + 1,\n            limit: limit\n        }\n    }\n\n    if (startIndex > 0) {\n        results.previous = {\n            page: page - 1,\n            limit: limit\n        }\n    }\n    User.find({}).sort('-created_at').limit(limit).skip(startIndex).exec((err, users, next) => {\n        if (err) {\n            console.log(err);\n            return res.json({error: true, status: 401, message: \"Failed to fetch users\"})\n        }\n        return res.json({error: false, status: 201, total_users: total_users, verified_users: total_verified_users, blocked_users: total_blocked_users, pagination: results, users: users, message: \"Fetch all users successful!\" });\n    });\n}\n\nexport const reg_user_erpon = (req, res, next) => {\n    if (\n        (!req.body.name) ||\n        (!req.body.email) ||\n        (!req.body.phoneNumber) ||\n        (!req.body.password) ||\n        (!req.body.epron_admin)\n        ) {\n        // console.log(\"All not filled\");\n        return res.status(401).send({error: true, message: \"Name, email, phone, epron_admin and role password are required\"});\n    } \n    let user = new User({\n        name: req.body.name,\n        email: req.body.email,\n        phoneNumber: req.body.phoneNumber,\n        epron_admin: req.body.epron_admin,\n        password: User.hashPassword(req.body.password),\n        // image_url: req.body.image_url,\n        role: 'epron',\n        created_at: Date.now(),\n        updated_at: Date.now()\n\n    });\n    User.findOne({ email: req.body.email }).exec((err, doc, next) => {\n                \n        // let userEmail = req.body.email;\n        if (err) {\n            return res.status(401).send({error: true, code: 401, message: \"An error occcured\"});\n        }\n        if (doc) {\n            return res.status(401).send({error: true, message: \"Email already exists\"});\n        }\n        user.save()\n        .then((dataRes) => {\n            // res.status(201).json({'user': dataRes, error: false, status: 'success', message: \"Registration successful!\", code: 201 });\n            async.waterfall([\n                (done) => {\n                    crypto.randomBytes(20, (err, buf) => {\n                        let token = buf.toString('hex');\n                        done(err, token);\n                    });\n                },\n                (token, done) => {\n                    // User.findOne({email: req.body.email}).exec\n                    User.findOne({ email: req.body.email }, (err, user) => {\n                        // userEmail = req.body.email;\n                        // console.log('email', userEmail);\n                        if (!user) {\n                            // req.flash('error', 'No account with that email address exists.');\n                            // return next(new Error('No account with that email address exists.'));\n                            return res.send({error: true, message: 'Email address does not exists.'});\n        \n                        }\n                        user.verifyToken = token;\n                        user.verifyTokenExpires = Date.now() + 3600000;\n        \n                        user.save(function (err) {\n                            done(err, token, user);\n                        });\n                    });\n                },\n                (token, user, done) => {\n                    let mailTransporter = nodemailer.createTransport({\n                        service: 'gmail',\n                        auth: {\n                            user: 'epronnigeria@gmail.com',\n                            pass: 'xwytgfmmdpdnbajp'\n                        }\n                    });\n                     \n                    let mailDetails = {\n                        from: 'Epron Admin <epronnigeria@gmail.com>',\n                        to: req.body.email,\n                        subject: 'Epron Registration',\n                        text: 'You are receiving this because Epron have requested to sign you up as admin on Epron ' + ' please click on the following link, or paste this into your browser to complete the process:\\n\\n' + 'https://epronregister.com.ng/verify/' + token + '\\n\\n' +\n                        'If you did not request this, please ignore this email and your registration will be canceled.\\n\\n' + ' Your password is ' + (req.body.password) + ' you can change it at anytime for privacy.'\n                    };\n                     \n                    mailTransporter.sendMail(mailDetails, function(err, data) {\n                        // console.log(\"Dattttttttttttaaaaaaaa\", data);\n                        if(err) {\n                            // console.log('Error Occurs', err);\n                            return res.send({error: true, code: 401, message: \"Failed to add new unverified user\"});\n                        } else {\n                            // console.log('Email sent successfully');\n                            return res.json({error: false, code: 201, status: 'success', message: 'Token sent to your email'});\n                        }\n                    });\n                }\n            ]).catch(err => {\n            console.log(err);\n            return res.send({err});\n            })\n        })\n        .catch(err => {\n            // console.log(\"errrrrrrrrrrrrrrrrrrrrrr\", err);\n            return res.send({error: true, code: 401, message: \"Failed to add new epron admin user\"});\n        });\n    });\n    \n};\n\nexport const fetch_users_loged_equiptment_oem = async (req, res) => {\n    const page = parseInt(req.query.page);\n    const limit = parseInt(req.query.limit);\n    const startIndex = (page - 1) * limit;\n    const endIndex = page * limit;\n    const results = {};\n\n    const total_equipment_logged = await Log.countDocuments({}).exec();\n    const total_number_paid = await Log.countDocuments({paid: true}).exec();\n\n    if (endIndex <  await Log.countDocuments().exec()) {\n        results.next = {\n            page: page + 1,\n            limit: limit\n        }\n    }\n\n    if (startIndex > 0) {\n        results.previous = {\n            page: page - 1,\n            limit: limit\n        }\n    }\n    Log.find({}).populate('category_id').populate('sub_category_id').populate('user_id').sort('-created_at').limit(limit).skip(startIndex).exec((err, equipment, next) => {\n        if (err) {\n            // console.log(err);\n            return res.json({error: true, status: 401, message: \"Failed to fetch user logged equipment\"})\n        }\n        if (!equipment) {\n            return res.json({error: true, status: 404, message: \"Log equipent does not exist!\"})\n        }\n        const log_weight = equipment.reduce(function (previousValue, currentValue) {\n            return previousValue + currentValue.weight;\n        }, 0);\n\n        const value = equipment.filter(result => result.paid === true);\n        \n        const total_payment_made = value.reduce(function (previousValue, currentValue) {\n            return previousValue + currentValue.total;\n        }, 0);\n\n        const value2 = equipment.filter(result => result.paid === false);\n        \n        const total_unpaid = value2.reduce(function (previousValue, currentValue) {\n            return previousValue + currentValue.total;\n        }, 0);\n        \n        // const amount_unpaid = \n        const number_of_unpaid = total_equipment_logged - total_number_paid;\n       \n        return res.json({error: false, status: 201, total_logged_equipment_paid: total_number_paid, unpaid_log_number: number_of_unpaid, total_payment_made: total_payment_made, unpaid_payment: total_unpaid, total_logged_eqiupment: total_equipment_logged, total_weight_logged: log_weight, pagination: results, log: equipment, message: \"Fetch all logged equipments successful!\" });\n    });\n}\n\nexport const fetch_user_loged_equiptment_paid_status_oem = async (req, res) => {\n    const page = parseInt(req.query.page);\n    const limit = parseInt(req.query.limit);\n    const startIndex = (page - 1) * limit;\n    const endIndex = page * limit;\n    const results = {};\n\n    const total_equipment_logged = await Log.countDocuments({paid: req.query.paid}).exec();\n    // const total_number_paid = await Log.countDocuments({user_id: req.params.id, paid: true}).exec();\n\n    if (endIndex <  await Log.countDocuments().exec()) {\n        results.next = {\n            page: page + 1,\n            limit: limit\n        }\n    }\n\n    if (startIndex > 0) {\n        results.previous = {\n            page: page - 1,\n            limit: limit\n        }\n    }\n    Log.find({paid: req.query.paid}).populate('category_id').populate('sub_category_id').populate('user_id').sort('-created_at').limit(limit).skip(startIndex).exec((err, equipment, next) => {\n        if (err) {\n            // console.log(err);\n            return res.json({error: true, status: 401, message: \"Failed to fetch user logged equipment\"})\n        }\n        if (!equipment) {\n            // console.log(err);\n            return res.json({error: true, status: 404, message: \"user logged equipment not found\"})\n        }\n       \n        return res.json({error: false, status: 201, total_logged_eqiupment: total_equipment_logged, pagination: results, log: equipment, message: \"success\" });\n    });\n}\n\n\nexport const fetch_all_admin_users = async (req, res) => {\n    const page = parseInt(req.query.page);\n    const limit = parseInt(req.query.limit);\n    const startIndex = (page - 1) * limit;\n    const endIndex = page * limit;\n    const results = {};\n    const total_users = await User.countDocuments({role: 'epron'}).exec();\n    const total_blocked_users = await User.countDocuments({blocked: true, role: 'epron'}).exec();\n\n    if (endIndex <  await User.countDocuments().exec()) {\n        results.next = {\n            page: page + 1,\n            limit: limit\n        }\n    }\n\n    if (startIndex > 0) {\n        results.previous = {\n            page: page - 1,\n            limit: limit\n        }\n    }\n    User.find({role: 'epron'}).sort('-created_at').limit(limit).skip(startIndex).exec((err, users, next) => {\n        if (err) {\n            console.log(err);\n            return res.json({error: true, status: 401, message: \"Failed to fetch users\"})\n        }\n        return res.json({error: false, status: 201, total_users: total_users, blocked_users: total_blocked_users, pagination: results, users: users, message: \"Fetch all users successful!\" });\n    });\n}\n\nexport const block_user = (req, res) => {\n    User.findById({_id: req.params.id}, (err, user) => {\n        if (err) {\n            res.send({code: 505, error: true, err: err, message: 'error occured' });\n            // console.log(err);\n        }\n        if (user.blocked === true) {\n            res.send({code: 401, error: true, message: 'User is alraedy blocked' });\n        }\n        if (!user) {\n            res.send({code: 404, error: true, message: 'Can not find user' });\n        }    \n            // return next(new Error('Could not load document'));\n        else {\n            user.blocked = true,\n            user.updated_at = Date.now()\n            user.save().then(result => {\n                res.json({ error: false, code: 200, status: 'success', message: 'user has been blocked'});\n                //res.status(200).send({mssage: 'update successful'});\n            }).catch(err => {\n                // console.log(err.code);\n                res.send({ error: true, message: 'failed to block user' });\n            });\n        }\n    });\n}\nexport const unblock_user = (req, res) => {\n    User.findById({_id: req.params.id}, (err, user) => {\n        if (err) {\n            res.send({code: 505, error: true, err: err, message: 'error occured' });\n            // console.log(err);\n        }\n        if (user.blocked === false) {\n            res.send({code: 401, error: true, message: 'User is alraedy unblocked' });\n        }\n        if (!user) {\n            res.send({code: 404, error: true, message: 'Can not find user' });\n        }   // return next(new Error('Could not load document'));\n        else {\n            user.blocked = false,\n            user.updated_at = Date.now()\n            user.save().then(result => {\n                res.json({ error: false, code: 200, status: 'success', message: 'user has been unblocked'});\n                //res.status(200).send({mssage: 'update successful'});\n            }).catch(err => {\n                // console.log(err.code);\n                res.send({ error: true, message: 'failed to unblock user' });\n            });\n        }\n    });\n}\n\nexport const fetch_all_loged_ewaste = async (req, res) => {\n    const page = parseInt(req.query.page);\n    const limit = parseInt(req.query.limit);\n    const startIndex = (page - 1) * limit;\n    const endIndex = page * limit;\n    const results = {};\n\n    const total_ewaste = await Ewaste.countDocuments({}).exec();\n    const total_pickedup = await Ewaste.countDocuments({pickedup: true}).exec();\n    const total_unpickedup = await Ewaste.countDocuments({pickedup: false}).exec();\n    const total_ready_for_pickup = await Ewaste.countDocuments({ready_pickup: true}).exec();\n    const total_not_ready_for_pickup = await Ewaste.countDocuments({ready_pickup: false}).exec();\n\n    if (endIndex <  await Ewaste.countDocuments().exec()) {\n        results.next = {\n            page: page + 1,\n            limit: limit\n        }\n    }\n\n    if (startIndex > 0) {\n        results.previous = {\n            page: page - 1,\n            limit: limit\n        }\n    }\n    Ewaste.find({}).sort('-created_at').populate('category_id').populate('sub_category_id').populate('user_id').limit(limit).skip(startIndex).exec((err, ewaste, next) => {\n        if (err) {\n            console.log(err);\n            return res.json({error: true, status: 401, message: \"error occured\"})\n        }\n        if (!ewaste) {\n            console.log(err);\n            return res.json({error: true, status: 404, message: \"e-waste not found\"})\n        }\n        \n        else {\n            const total_ewaste_weight = ewaste.reduce(function (previousValue, currentValue) {\n                return previousValue + currentValue.weight;\n            }, 0);\n            return res.json({error: false, status: 201, pagination: results, total_ewaste: total_ewaste, total_ready_for_pickup: total_ready_for_pickup, total_not_ready_for_pickup: total_not_ready_for_pickup, total_ewaste_weight: total_ewaste_weight, total_unpickedup: total_unpickedup, total_pickedup: total_pickedup, ewaste: ewaste, message: \"Fetch all logged ewaste successful!\" });\n        }\n    });\n}\n\n// export const asign_recycler_to_collection_center = (req, res) => {\n//     //  the user_id is the id of the user which is a collection center or collector while signing up\n//     Collection.findOne({user_id: req.body.collector_user_id}).exec((err, center) => {\n//         if (\n//             (!req.body.collector_user_id)\n//             (!req.body.recycler_user_id)\n//         ) {\n//             return res.status(401).send({error: true, message: \"Collection center ID, and recycler ID are required\"});\n//         }\n//         if (err) {\n//             return res.json({error: true, status: 401, message: \"An error occured\"})\n//         }\n//         if (!center) {\n//             res.send({code: 404, error: true, message: 'Can not find collection center' });\n//         }\n//         // if (center.role != 'recycler') {\n//         //     res.send({code: 404, error: true, message: 'user not a recycler' });\n//         // }\n//         else {\n//             // the recycler id id the id of the user who is a recycler in this case.\n//             const index = center.recyclers.includes(req.body.recycler_user_id);\n//             console.log(\"index\", index);\n//             if (index === false) {\n//                 center.recyclers.push(req.body.recycler_user_id);\n//                 center.save().then(result => {\n//                     res.json({ error: false, code: 200, status: 'success', message: 'user has been asigned to collection center'});\n//                 }).catch(err => {\n//                     // console.log(err.code);\n//                     res.send({ error: true, message: 'failed to asign user to collection' });\n//                 });\n//             } else {\n//                 res.send({ error: true, message: 'user already asigned to this collection center' });\n//             }\n//         }\n        \n//     })\n// }\n\nexport const remove_recycler_to_collection_center = (req, res) => {\n    //  the user_id is the id of the user which is a collection center or collector while signing up\n    Collection.findOne({user_id: req.body.collector_user_id}).exec((err, center) => {\n        if (err) {\n            return res.json({error: true, status: 401, message: \"An error occured\"})\n        }\n        if (!center) {\n            res.send({code: 404, error: true, message: 'Can not find collection center' });\n        }\n        // if (center.role != 'recycler') {\n        //     res.send({code: 404, error: true, message: 'user not a recycler' });\n        // }\n        else {\n            console.log(\"centers\", center)\n            // the recycler id id the id of the user who is a recycler in this case.\n            const index = center.recyclers.indexOf(req.body.recycler_user_id);\n            // console.log(\"index\", index);\n            if (center.recyclers.length != 0) {\n                center.recyclers.splice(index, 1);\n                center.save().then(result => {\n                    res.json({ error: false, code: 200, status: 'success', message: 'user has been removed from collection center'});\n                    //res.status(200).send({mssage: 'update successful'});\n                }).catch(err => {\n                    // console.log(err.code);\n                    res.send({ error: true, message: 'failed to remove  user' });\n                });\n            } else {\n                res.send({ error: true, code: 404, message: 'recyceler was not asined to this collection center' });\n            }\n            \n        }\n        \n    })\n}\n\n// this function get a collection cecnter based on the user id and populate its recyclers.\nexport const fetch_collection_center_byId = (req, res) => {\n    Collection.findById({ _id: req.params.id}).populate('recyclers').exec((err, result) => {\n        if (err) {\n            return res.json({error: true, status: 401, message: \"An error occured\"})\n        }\n        if (!result) {\n            res.send({code: 404, error: true, message: 'Can not find collection center' });\n        }\n        else {\n            // console.log(\"result\", result)\n            res.json({ error: false, code: 200, center: result, status: 'success', message: 'success!'});\n\n        }\n    })\n}\n\nexport const fetch_all_pickups_accepted = async (req, res) => {\n    const page = parseInt(req.query.page);\n    const limit = parseInt(req.query.limit);\n    const startIndex = (page - 1) * limit;\n    const endIndex = page * limit;\n    const results = {};\n    const total_pickups = await RequestPickup.countDocuments({accept_request: true}).exec();\n\n    if (endIndex <  await RequestPickup.countDocuments().exec()) {\n        results.next = {\n            page: page + 1,\n            limit: limit\n        }\n    }\n\n    if (startIndex > 0) {\n        results.previous = {\n            page: page - 1,\n            limit: limit\n        }\n    }\n    RequestPickup.find({accept_request: true}).populate('accepted_by').sort('-created_at').limit(limit).skip(startIndex).exec((err, requestpickup) => {\n        if (err) {\n            console.log(err);\n            return res.json({error: true, status: 401, message: \"Failed fetch request accepted pickups\"})\n        }\n        return res.json({error: false, status: 201, pagination: results, total: total_pickups, requests: requestpickup, message: \"successful!\" });\n    });\n}\n\nexport const find_all_collection_center = async (req, res) => {\n    const page = parseInt(req.query.page);\n    const limit = parseInt(req.query.limit);\n    const startIndex = (page - 1) * limit;\n    const endIndex = page * limit;\n    const results = {};\n    const total_centers = await User.countDocuments({role: 'collector'}).exec();\n\n    if (endIndex <  await User.countDocuments({role: 'collector'}).exec()) {\n        results.next = {\n            page: page + 1,\n            limit: limit\n        }\n    }\n\n    if (startIndex > 0) {\n        results.previous = {\n            page: page - 1,\n            limit: limit\n        }\n    }\n    \n    User.find({ role: 'collector' }).sort('-created_at').limit(limit).skip(startIndex).exec((err, user) => {\n        if (err) {\n            console.log(err);\n            return res.json({error: true, status: 401, message: \"Error occured\"})\n        }\n        if (!user) {\n            console.log(err);\n            return res.json({error: true, status: 404, message: \"User not found\"})\n        }\n        \n        return res.json({error: false, status: 201, pagination: results, total_users: total_centers, user: user, message: \"successful!\" });\n    });\n}\n\nexport const fetch_all_pickup_based_on_acceptance = async (req, res) => {\n    const page = parseInt(req.query.page);\n    const limit = parseInt(req.query.limit);\n    const startIndex = (page - 1) * limit;\n    const endIndex = page * limit;\n    const results = {};\n    const total_pickups = await RequestPickup.countDocuments({accept_request: req.query.accepted}).exec();\n\n    if (endIndex <  await RequestPickup.countDocuments({accept_request: req.query.accepted}).exec()) {\n        results.next = {\n            page: page + 1,\n            limit: limit\n        }\n    }\n\n    if (startIndex > 0) {\n        results.previous = {\n            page: page - 1,\n            limit: limit\n        }\n    }\n    RequestPickup.find({accept_request: req.query.accepted}).populate(\"accepted_by\").sort('-created_at').limit(limit).skip(startIndex).exec((err, requestpickup) => {\n        if (err) {\n            console.log(err);\n            return res.json({error: true, status: 401, message: \"Failed fetch all request pickups\"})\n        }\n        return res.json({error: false, status: 201, pagination: results, total: total_pickups, requests: requestpickup, message: \"All request for pickup based on loaction and accepted successful!\" });\n    });\n}\n\n\nexport const find_all_user_based_on_verified_status = async (req, res) => {\n    const page = parseInt(req.query.page);\n    const limit = parseInt(req.query.limit);\n    const startIndex = (page - 1) * limit;\n    const endIndex = page * limit;\n    const results = {};\n    const total_users = await User.countDocuments({verified: req.query.verified}).exec();\n\n    if (endIndex <  await User.countDocuments({role: 'collector'}).exec()) {\n        results.next = {\n            page: page + 1,\n            limit: limit\n        }\n    }\n\n    if (startIndex > 0) {\n        results.previous = {\n            page: page - 1,\n            limit: limit\n        }\n    }\n    \n    User.find({ verified: req.query.verified }).sort('-created_at').limit(limit).skip(startIndex).exec((err, user) => {\n        if (err) {\n            console.log(err);\n            return res.json({error: true, status: 401, message: \"Error occured\"})\n        }\n        if (!user) {\n            console.log(err);\n            return res.json({error: true, status: 404, message: \"User not found\"})\n        }\n        \n        return res.json({error: false, status: 201, pagination: results, total_users: total_users, user: user, message: \"successful!\" });\n    });\n}\n\n\n\nexport const fetch_logewaste_weight_by_recyclers = async (req, res) => {\n    const page = parseInt(req.query.page);\n    const limit = parseInt(req.query.limit);\n    const startIndex = (page - 1) * limit;\n    const endIndex = page * limit;\n    const results = {};\n\n    const total_ewaste_logged = await RecyclerWaste.countDocuments().exec();\n\n    if (endIndex <  await RecyclerWaste.countDocuments().exec()) {\n        results.next = {\n            page: page + 1,\n            limit: limit\n        }\n    }\n\n    if (startIndex > 0) {\n        results.previous = {\n            page: page - 1,\n            limit: limit\n        }\n    }\n    RecyclerWaste.find().sort('-created_at').populate('collection_centerid').populate('recycler_id').limit(limit).skip(startIndex).exec((err, ewaste) => {\n        if (err) {\n            // console.log(\"errrrrrrrrrrrrrrrrrrrrrr\", err);\n            return res.json({error: true, status: 401, message: \"Failed to fetch recycler ewaste weight logged\"})\n        }\n        if (!ewaste) {\n            return res.json({error: true, status: 404, message: \"Cant not find recyceler e-waste weight logged\"})\n        }\n        const waste_weight = ewaste.reduce(function (previousValue, currentValue) {\n            return previousValue + currentValue.weight;\n        }, 0);\n        return res.json({error: false, status: 201, total_logged_ewaste: total_ewaste_logged, total_weight_logged_ton: waste_weight, pagination: results, ewaste: ewaste, message: \"Fetch all logged ewaste successful!\" });\n    });\n}\n\nexport const fetch_logewaste_weight_by_recyclers_id = async (req, res) => {\n    const page = parseInt(req.query.page);\n    const limit = parseInt(req.query.limit);\n    const startIndex = (page - 1) * limit;\n    const endIndex = page * limit;\n    const results = {};\n\n    const total_ewaste_logged = await RecyclerWaste.countDocuments({recycler_id: req.params.id}).exec();\n\n    if (endIndex <  await RecyclerWaste.countDocuments({recycler_id: req.params.id}).exec()) {\n        results.next = {\n            page: page + 1,\n            limit: limit\n        }\n    }\n\n    if (startIndex > 0) {\n        results.previous = {\n            page: page - 1,\n            limit: limit\n        }\n    }\n    RecyclerWaste.find({recycler_id: req.params.id}).sort('-created_at').populate('collection_centerid').populate('recycler_id').limit(limit).skip(startIndex).exec((err, ewaste) => {\n        if (err) {\n            // console.log(\"errrrrrrrrrrrrrrrrrrrrrr\", err);\n            return res.json({error: true, status: 401, message: \"Failed to fetch recycler ewaste weight logged\"})\n        }\n        if (!ewaste) {\n            return res.json({error: true, status: 404, message: \"Cant not find recyceler e-waste weight logged\"})\n        }\n        const waste_weight = ewaste.reduce(function (previousValue, currentValue) {\n            return previousValue + currentValue.weight;\n        }, 0);\n        return res.json({error: false, status: 201, total_logged_ewaste: total_ewaste_logged, total_weight_logged_ton: waste_weight, pagination: results, ewaste: ewaste, message: \"Fetch all logged ewaste by user successful!\" });\n    });\n}\n\nexport const asign_collection_center_to_recyclers = (req, res) => {\n    //  the user_id is the id of the user which is a collection center or collector while signing up\n    User.findById({_id: req.body.recycler_id}).exec((err, user) => {\n        // console.log(\"user\", user)\n        if (\n            (!req.body.collection_center) ||\n            (!req.body.role) ||\n            (!req.body.recycler_id)\n        ) {\n            return res.status(401).send({error: true, message: \"Collection center ID, Role and recycler ID are required\"});\n        }\n        if (err) {\n            return res.json({error: true, status: 401, message: \"An error occured\"});\n        }\n        if (!user) {\n            res.send({code: 404, error: true, message: 'Can not find user' });\n        }\n        if (user.role != 'recycler') {\n            res.send({code: 404, error: true, message: 'user not a recycler' });\n        }\n        else {\n            // collection_center is the user id of which has a role of collector.\n            User.findById({_id: req.body.collection_center, role: 'collector'}).exec((err2, center) => {\n                // console.log(\"collection center\", center);\n                if (err2) {\n                    return res.json({error: true, status: 401, message: \"An error occured in getting collection center\"});\n                }\n                if (!center) {\n                    res.send({code: 404, error: true, message: 'Can not find collection center' });\n                }\n                if (center.collection_center_assigned === true) {\n                    res.send({code: 400, error: true, message: 'collection center already assigned to a recycler' });\n                } else {\n                    center.collection_center_assigned = true;\n                    center.save().then(result => {\n                        const index = user.collection_center.includes(req.body.collection_center);\n                        // console.log(\"index\", index);\n                        if (index === false) {\n                            user.collection_center.push(req.body.collection_center);\n                            user.save().then(result => {\n                            res.json({ error: false, code: 200, status: 'success', message: 'collection center has been asigned to recycler'});\n                            }).catch(err => {\n                            // console.log(err.code);\n                                res.send({ error: true, message: 'failed to asign collection center' });\n                            });\n                        } else {\n                            res.send({ error: true, message: 'collection center already asigned to this recycler' });\n                        }\n                    }).catch(err => {\n                            // console.log(err.code);\n                        res.send({ error: true, message: 'failed to asign collection center' });\n                    });\n                }\n            });\n        \n            // const index = user.collection_center.includes(req.body.collection_center);\n            // console.log(\"index\", index);\n            // if (index === false) {\n            //     user.collection_center.push(req.body.collection_center);\n            //     user.save().then(result => {\n            //         res.json({ error: false, code: 200, status: 'success', message: 'collection center has been asigned to recycler'});\n            //     }).catch(err => {\n            //         // console.log(err.code);\n            //         res.send({ error: true, message: 'failed to asign collection center' });\n            //     });\n            // } else {\n            //     res.send({ error: true, message: 'collection center already asigned to this recycler' });\n            // }\n        }\n        \n    })\n}\n\nexport const remove_collection_center_recycler_user = (req, res) => {\n    if (\n        (!req.body.collection_center) ||\n        (!req.body.role) ||\n        (!req.body.recycler_id)\n    ) {\n        return res.status(401).send({error: true, message: \"Collection center ID, role and recycler ID are required\"});\n    }\n    User.findById({_id: req.body.recycler_id}).exec((err, user) => {\n        if (err) {\n            return res.json({error: true, status: 401, message: \"An error occured\"})\n        }\n        if (!user) {\n            res.send({code: 404, error: true, message: 'Can not find user' });\n        }\n        if (user.role != 'recycler') {\n            res.send({code: 404, error: true, message: 'user not a recycler' });\n        }\n        else {\n            console.log(\"centers\", user)\n            // the recycler id id the id of the user who is a recycler in this case.\n            const index = user.collection_center.includes(req.body.recycler_id);\n            console.log(\"index\", index);\n            // if (!user.collection_center.includes(req.body.recycler_id)) {\n            if (user.collection_center.length != 0) {\n                user.collection_center.splice(index, 1);\n                user.save().then(result => {\n                    res.json({ error: false, code: 200, status: 'success', message: 'collection center has been removed for this user'});\n                    //res.status(200).send({mssage: 'update successful'});\n                }).catch(err => {\n                    // console.log(err.code);\n                    res.send({ error: true, message: 'failed to asign Collection center' });\n                });\n            } else {\n                res.send({ error: true, code: 401, message: 'collection center was not asigned to this user' });\n            }\n            \n        }\n        \n    })\n}\n\n\nexport const fetch_recyclers_with_colection_center = (req, res) => {\n    //  the user_id is the id of the user which is a collection center or collector while signing up\n    if (\n        (!req.params.collection_center) ||\n        (!req.params.recycler_id)\n    ) {\n        return res.status(401).send({error: true, message: \"Collection center ID and recycler ID are required\"});\n    }\n    User.findById({_id: req.params.recycler_id}).populate('collection_center').exec((err, user) => {\n        console.log(\"user\", user)\n        if (err) {\n            return res.json({error: true, status: 401, message: \"An error occured\"});\n        }\n        if (!user) {\n            res.send({code: 404, error: true, message: 'Can not find user' });\n        }\n        if (user.role != 'recycler') {\n            res.send({code: 401, error: true, message: 'user not a recycler' });\n        }\n        if ( user.collection_center.length <= 0 ) {\n            res.send({error: true, message: 'user not asigned a collection center' });\n        }\n        else {\n        \n            res.send({ error: true, data: user, message: 'success!' });\n        }\n        \n    });\n}\n\nexport const approved_documents_oem = (req, res) => {\n    User.findById({_id: req.params.id, role: 'manufacturer'}).exec((err, user) => {\n        if (err) {\n            return res.status(401).send({error: true, message: \"Error occurred\"});\n        }\n        if (!user) {\n            return res.status(404).send({error: true, message: \"User not found\"});\n        }\n        if (user.approved_documents === true) {\n            return res.status(401).send({error: true, message: \"Documents already approved\"});\n        }\n        user.approved_documents = true;\n        user.save().then(result => {\n            res.json({ error: false, code: 200, status: 'success', message: 'documents approved'});\n        }).catch(err => {\n            // console.log(err.code);\n            res.send({ error: true, err: err, message: 'server error, failed to approve document' });\n        });\n    });\n}\nexport const disapprove_documents_oem = (req, res) => {\n    User.findById({_id: req.params.id, role: 'manufacturer'}).exec((err, user) => {\n        if (err) {\n            return res.status(401).send({error: true, message: \"Error occurred\"});\n        }\n        if (!user) {\n            return res.status(404).send({error: true, message: \"User not found\"});\n        }\n        if (user.approved_documents === false) {\n            return res.status(401).send({error: true, message: \"No documents approved yet\"});\n        }\n        user.approved_documents = false;\n        user.save().then(result => {\n            res.json({ error: false, code: 200, status: 'success', message: 'documents approval reversed'});\n        }).catch(err => {\n            // console.log(err.code);\n            res.send({ error: true, err: err, message: 'server error, failed to disapprove document' });\n        });\n    });\n}\n\nexport const dashboard_counts = async (req, res) => {\n    Log.find({}).exec((err, equipment) => {\n        if (err) {\n            return res.status(401).send({error: true, message: \"Error occurred while feching manufacturer logged equipment\"});\n        }\n        let logged_eqiupment_weight = equipment.reduce(function (previousValue, currentValue) {\n            return previousValue + currentValue.weight;\n        }, 0);\n\n        const paid = equipment.filter((el) => {\n            return el.paid === true\n        });\n\n        let total_payment_reciceved = paid.reduce(function (previousValue, currentValue) {\n            return previousValue + currentValue.total;\n        }, 0);\n        Ewaste.find({}).exec((err, waste, next) => {\n            if (err) {\n                return res.status(401).send({error: true, message: \"Error occurred while feching collection center logged ewaste\"});\n            }\n            \n            let logged_collection_center_waste_weight = waste.reduce(function (previousValue, currentValue) {\n                return previousValue + currentValue.weight;\n            }, 0);\n        \n            RecyclerWaste.find({}).exec(async (err, recycler_waste) => {\n                if (err) {\n                    return res.status(401).send({error: true, message: \"Error occurred while feching reycler logged ewaste\"});\n                }\n                let logged_recycler_waste_weight = recycler_waste.reduce((previousValue, currentValue) => {\n                    return previousValue + currentValue.weight;\n                }, 0);\n\n                // verified\n                const recyclers = await User.countDocuments({role: 'recycler', verified: true}).exec();\n                const manufacturers = await User.countDocuments({role: 'manufacturer', verified: true}).exec();\n                const collectors = await User.countDocuments({role: 'collector', verified: true}).exec();\n                const admin = await User.countDocuments({role: 'admin'}).exec();\n\n                const unverified_recyclers = await User.countDocuments({role: 'recycler', verified: false}).exec();\n                const unverified_manufacturers = await User.countDocuments({role: 'manufacturer', verified: false}).exec();\n                const unverified_collectors = await User.countDocuments({role: 'collector', verified: false}).exec();\n                const toal_requested_pickups = await RequestPickup.countDocuments({}).exec();\n\n                let data = {\n                    total_payment_reciceved: total_payment_reciceved,\n                    recyclers: recyclers,\n                    manufacturers: manufacturers,\n                    collectors: collectors,\n                    admin: admin,\n                    unverified_recyclers: unverified_recyclers,\n                    unverified_manufacturers: unverified_manufacturers,\n                    unverified_collectors: unverified_collectors,\n                    toal_requested_pickups: toal_requested_pickups,\n                    manufacturers_logged_ewaste_weight: Math.round(logged_eqiupment_weight),\n                    collection_centers_logged_ewaste_weight: Math.round(logged_collection_center_waste_weight),\n                    recyclers_logged_ewaste_weight: Math.round(logged_recycler_waste_weight)\n                }\n\n\n                res.json({ error: false, code: 200, status: 'success', data});\n            });\n        });\n    });\n}\n\n\nexport const search_user_varibles = async (req, res) => {\n    // console.log('Search', req.query.search);\n    let query = { name: req.query.search };\n    // let regex = new RegExp(query,'i');\n\n    const page = parseInt(req.query.page);\n    const limit = parseInt(req.query.limit);\n    const startIndex = (page - 1) * limit;\n    const endIndex = page * limit;\n    const results = {};\n\n    const total_users = await User.countDocuments({$or: [\n        {'name': {$regex: req.query.search, $options: 'i'}},\n        {'email': {$regex: req.query.search, $options: 'i'}},\n        ]}).exec();\n\n    if (endIndex <  await User.countDocuments({$or: [\n        {'name': {$regex: req.query.search, $options: 'i'}},\n        {'email': {$regex: req.query.search, $options: 'i'}},\n        ]}).exec()) {\n        results.next = {\n            page: page + 1,\n            limit: limit\n        }\n    }\n\n    if (startIndex > 0) {\n        results.previous = {\n            page: page - 1,\n            limit: limit\n        }\n    }\n    User.find({\n        $or: [\n        {'name': {$regex: req.query.search, $options: 'i'}},\n        {'email': {$regex: req.query.search, $options: 'i'}},\n        ]\n    }).exec((err, user) => {\n        if (err) {\n            console.log(err);\n            return res.status(401).send({error: true, message: \"Error occurred while feching users\"});\n        }\n        if (!user) {\n            return res.status(404).send({error: true, message: \"can not find users\"});\n        }\n        res.json({error: false, message: 'success', pagination: results, total_users: total_users, users: user, code: 200});\n        // console.log('search', search);\n    }),((err) => {\n        // console.log(err);\n        res.send({error: true, message: 'server error'});\n    });\n}\n\n\n\n// Search Log equipments only user by name and email\n// export const search_logged_equipment_with_varibles = (req, res) => {\n//     console.log('Search', req.query.search);\n//     let query = { name: req.query.search };\n//     // let regex = new RegExp(query,'i');\n//     User.find({\n//         $or: [\n//         {'name': {$regex: req.query.search, $options: 'i'}},\n//         {'email': {$regex: req.query.search, $options: 'i'}},\n//         ]\n//     }).exec((err, user) => {\n//         if (err) {\n//             console.log(err);\n//             return res.send(err);\n//         }\n//         res.json(user);\n//         // console.log('search', search);\n//     });\n// }\n\n\n// Search Log equipments only user by name and email\nexport const search_logged_equipment_with_varibles  = (req, res, next) => {\n    // console.log('Search', req.query.search);\n\n    User.find({$text: { $search: req.query.search, $diacriticSensitive: false}}, { score: { $meta: \"textScore\" } }).sort( \n        {  score: { $meta : 'textScore' } }).exec((err, user) => {\n        if (err) {\n            return res.status(401).send({error: true, message: \"Error occurred while feching users\"});\n        }\n        if (!user) {\n            return res.status(401).send({error: true, code: 404, message: \"User not found\"});\n        }\n        console.log(\"User serced for\", user);\n        // return res.send({error: false, message: \"User searched done\", user});\n\n        // Log.find({ user_id: user[0]._id }).populate('category_id').populate('sub_category_id').populate('user_id').exec((err, search) => {\n        // if (err) {\n        //     console.log(err);\n        //     return res.send(err);\n        // }\n        // res.json({search, user});\n        // // console.log('search', search);\n        // }),((err) => {\n        //     // console.log(err);\n        //     res.send({error: true, message: 'An error while seaching logged equipment'});\n        // });\n\n    })\n\n    \n}\n\n\n\nexport const find_user_by_date_range = async (req, res) => {\n\n    let { startDate, endDate } = req.query;\n\n    if(startDate === '' || endDate === '') {\n        return res.status(400).json({\n            status:'failure',\n            message: 'Please ensure you pick two dates'\n        })\n    }\n     \n       //2. check that date is in the right format\n      //expected result: YYY-MMM-DDD\n        // console.log({ startDate, endDate});\n\n    const page = parseInt(req.query.page);\n    const limit = parseInt(req.query.limit);\n    const startIndex = (page - 1) * limit;\n    const endIndex = page * limit;\n    const results = {};\n\n    const total_users = await User.countDocuments({created_at: { $gte: new Date(new Date(startDate).setHours(0, 0, 0)), $lt: new Date(new Date(endDate).setHours(23, 59, 59)) }}).exec();\n\n    if (endIndex <  await User.countDocuments({created_at: { $gte: new Date(new Date(startDate).setHours(0, 0, 0)), $lt: new Date(new Date(endDate).setHours(23, 59, 59)) }}).exec()) {\n        results.next = {\n            page: page + 1,\n            limit: limit\n        }\n    }\n\n    if (startIndex > 0) {\n        results.previous = {\n            page: page - 1,\n            limit: limit\n        }\n    }\n    // $gte: new Date(new Date(startDate).setHours(00, 00, 00)),\n    // $lt: new Date(new Date(endDate).setHours(23, 59, 59))\n    User.find({ \n        created_at: {\n            $gte: new Date(new Date(startDate).setHours(0, 0, 0)),\n            $lt: new Date(new Date(endDate).setHours(23, 59, 59))\n            //   $gte: new Date(new Date(startDate)),\n            //   $lt: new Date(new Date(endDate))\n               }\n        }).sort('-created_at').limit(limit).skip(startIndex).exec((err, users) => {\n        // console.log(\"users\", users)\n        if (err) {\n            // console.log(\"errrrrrrrrrrrrrrrrrrrrrr\", err);\n            return res.json({error: true, status: 401, message: \"error occured\"})\n        }\n        if (!users) {\n            return res.json({error: true, status: 404, message: \"Cant not find users\"})\n        }\n        return res.json({error: false, status: 201, total_users: total_users, pagination: results, users: users, message: \"success!\" });\n    });\n}\n\nexport const find_user_by_specific_date = async (req, res) => {\n\n    let { actualDate } = req.query;\n\n    if(actualDate === '') {\n        return res.status(400).json({\n            status:'failure',\n            message: 'Please ensure you pick a dates'\n        })\n    }\n     \n       //2. check that date is in the right format\n      //expected result: YYY-MMM-DDD\n        // console.log({ actualDate});\n\n    const page = parseInt(req.query.page);\n    const limit = parseInt(req.query.limit);\n    const startIndex = (page - 1) * limit;\n    const endIndex = page * limit;\n    const results = {};\n\n    const total_users = await User.countDocuments({created_at: actualDate}).exec();\n\n    if (endIndex <  await User.countDocuments({created_at: actualDate}).exec()) {\n        results.next = {\n            page: page + 1,\n            limit: limit\n        }\n    }\n\n    if (startIndex > 0) {\n        results.previous = {\n            page: page - 1,\n            limit: limit\n        }\n    }\n    // $gte: new Date(2012, 7, 14), \n    // $lt: new Date(2012, 7, 15)\n\n    // $gte: new Date(new Date(startDate).setHours(00, 00, 00)),\n    // $lt: new Date(new Date(endDate).setHours(23, 59, 59))\n    User.find({ \n        created_at: \n        {\n            // new Date(actualDate)\n            $gte: new Date(actualDate),\n            $lt: new Date(actualDate)\n        }\n               \n        }).sort('-created_at').limit(limit).skip(startIndex).exec((err, users) => {\n        // console.log(\"users\", users)\n        if (err) {\n            // console.log(\"errrrrrrrrrrrrrrrrrrrrrr\", err);\n            return res.json({error: true, status: 401, message: \"error occured\"})\n        }\n        if (!users) {\n            return res.json({error: true, status: 404, message: \"Cant not find users\"})\n        }\n        return res.json({error: false, status: 201, total_users: total_users, pagination: results, users: users, message: \"success!\" });\n    });\n}\n\nexport const find_equipment_by_date_range = async (req, res) => {\n\n    let { startDate, endDate } = req.query;\n\n    if(startDate === '' || endDate === '') {\n        return res.status(400).json({\n            status:'failure',\n            message: 'Please ensure you pick two dates'\n        })\n    }\n     \n       //2. check that date is in the right format\n      //expected result: YYY-MMM-DDD\n        // console.log({ startDate, endDate});\n\n    const page = parseInt(req.query.page);\n    const limit = parseInt(req.query.limit);\n    const startIndex = (page - 1) * limit;\n    const endIndex = page * limit;\n    const results = {};\n\n    const total_equipments = await Log.countDocuments({created_at: { $gte: new Date(new Date(startDate).setHours(0, 0, 0)), $lt: new Date(new Date(endDate).setHours(23, 59, 59)) }}).exec();\n\n    if (endIndex <  await Log.countDocuments({created_at: { $gte: new Date(new Date(startDate).setHours(0, 0, 0)), $lt: new Date(new Date(endDate).setHours(23, 59, 59)) }}).exec()) {\n        results.next = {\n            page: page + 1,\n            limit: limit\n        }\n    }\n\n    if (startIndex > 0) {\n        results.previous = {\n            page: page - 1,\n            limit: limit\n        }\n    }\n    // $gte: new Date(new Date(startDate).setHours(00, 00, 00)),\n    // $lt: new Date(new Date(endDate).setHours(23, 59, 59))\n    Log.find({ \n        created_at: {\n            $gte: new Date(new Date(startDate).setHours(0, 0, 0)),\n            $lt: new Date(new Date(endDate).setHours(23, 59, 59))\n            //   $gte: new Date(new Date(startDate)),\n            //   $lt: new Date(new Date(endDate))\n               }\n        }).sort('-created_at').limit(limit).skip(startIndex).populate('user_id').exec((err, equipments) => {\n        // console.log(\"equipments\", equipments)\n        if (err) {\n            // console.log(\"errrrrrrrrrrrrrrrrrrrrrr\", err);\n            return res.json({error: true, status: 401, message: \"error occured\"})\n        }\n        if (!equipments) {\n            return res.json({error: true, status: 404, message: \"Cant not find equipments\"})\n        }\n        return res.json({error: false, status: 201, total_equipments: total_equipments, pagination: results, equipments: equipments, message: \"success!\" });\n    });\n}\n\nexport const search_ewaste_by_date_range = async (req, res) => {\n\n    let { startDate, endDate } = req.query;\n\n    if(startDate === '' || endDate === '') {\n        return res.status(400).json({\n            status:'failure',\n            message: 'Please ensure you pick two dates'\n        })\n    }\n     \n       //2. check that date is in the right format\n      //expected result: YYY-MMM-DDD\n        // console.log({ startDate, endDate});\n\n    const page = parseInt(req.query.page);\n    const limit = parseInt(req.query.limit);\n    const startIndex = (page - 1) * limit;\n    const endIndex = page * limit;\n    const results = {};\n\n    const total_ewastes = await Ewaste.countDocuments({created_at: { $gte: new Date(new Date(startDate).setHours(0, 0, 0)), $lt: new Date(new Date(endDate).setHours(23, 59, 59)) }}).exec();\n\n    if (endIndex <  await Ewaste.countDocuments({created_at: { $gte: new Date(new Date(startDate).setHours(0, 0, 0)), $lt: new Date(new Date(endDate).setHours(23, 59, 59)) }}).exec()) {\n        results.next = {\n            page: page + 1,\n            limit: limit\n        }\n    }\n\n    if (startIndex > 0) {\n        results.previous = {\n            page: page - 1,\n            limit: limit\n        }\n    }\n    // $gte: new Date(new Date(startDate).setHours(00, 00, 00)),\n    // $lt: new Date(new Date(endDate).setHours(23, 59, 59))\n    Ewaste.find({ \n        created_at: {\n            $gte: new Date(new Date(startDate).setHours(0, 0, 0)),\n            $lt: new Date(new Date(endDate).setHours(23, 59, 59))\n            //   $gte: new Date(new Date(startDate)),\n            //   $lt: new Date(new Date(endDate))\n               }\n        }).sort('-created_at').limit(limit).skip(startIndex).populate('user_id').exec((err, ewaste) => {\n        // console.log(\"equipments\", equipments)\n        if (err) {\n            // console.log(\"errrrrrrrrrrrrrrrrrrrrrr\", err);\n            return res.json({error: true, status: 401, message: \"error occured\"})\n        }\n        if (!ewaste) {\n            return res.json({error: true, status: 404, message: \"Cant not find ewaste\"})\n        }\n        return res.json({error: false, status: 201, total_ewastes: total_ewastes, pagination: results, ewaste: ewaste, message: \"success!\" });\n    });\n}\n\n\nexport const search_recyclerEwaste_by_date_range = async (req, res) => {\n\n    let { startDate, endDate } = req.query;\n\n    if(startDate === '' || endDate === '') {\n        return res.status(400).json({\n            status:'failure',\n            message: 'Please ensure you pick two dates'\n        })\n    }\n     \n       //2. check that date is in the right format\n      //expected result: YYY-MMM-DDD\n        // console.log({ startDate, endDate});\n\n    const page = parseInt(req.query.page);\n    const limit = parseInt(req.query.limit);\n    const startIndex = (page - 1) * limit;\n    const endIndex = page * limit;\n    const results = {};\n\n    const total_recyclerEwastes = await RecyclerWaste.countDocuments({created_at: { $gte: new Date(new Date(startDate).setHours(0, 0, 0)), $lt: new Date(new Date(endDate).setHours(23, 59, 59)) }}).exec();\n\n    if (endIndex <  await RecyclerWaste.countDocuments({created_at: { $gte: new Date(new Date(startDate).setHours(0, 0, 0)), $lt: new Date(new Date(endDate).setHours(23, 59, 59)) }}).exec()) {\n        results.next = {\n            page: page + 1,\n            limit: limit\n        }\n    }\n\n    if (startIndex > 0) {\n        results.previous = {\n            page: page - 1,\n            limit: limit\n        }\n    }\n    // $gte: new Date(new Date(startDate).setHours(00, 00, 00)),\n    // $lt: new Date(new Date(endDate).setHours(23, 59, 59))\n    RecyclerWaste.find({ \n        created_at: {\n            $gte: new Date(new Date(startDate).setHours(0, 0, 0)),\n            $lt: new Date(new Date(endDate).setHours(23, 59, 59))\n            //   $gte: new Date(new Date(startDate)),\n            //   $lt: new Date(new Date(endDate))\n               }\n        }).sort('-created_at').limit(limit).skip(startIndex).populate('user_id').exec((err, ewaste) => {\n        // console.log(\"equipments\", equipments)\n        if (err) {\n            // console.log(\"errrrrrrrrrrrrrrrrrrrrrr\", err);\n            return res.json({error: true, status: 401, message: \"error occured\"})\n        }\n        if (!ewaste) {\n            return res.json({error: true, status: 404, message: \"Cant not find recycler's ewaste\"})\n        }\n        return res.json({error: false, status: 201, total_recyclerEwastes: total_recyclerEwastes, pagination: results, ewaste: ewaste, message: \"success!\" });\n    });\n}\n\nexport const search_requestedPickups_by_date_range = async (req, res) => {\n\n    let { startDate, endDate } = req.query;\n\n    if(startDate === '' || endDate === '') {\n        return res.status(400).json({\n            status:'failure',\n            message: 'Please ensure you pick two dates'\n        })\n    }\n     \n       //2. check that date is in the right format\n      //expected result: YYY-MMM-DDD\n        // console.log({ startDate, endDate});\n\n    const page = parseInt(req.query.page);\n    const limit = parseInt(req.query.limit);\n    const startIndex = (page - 1) * limit;\n    const endIndex = page * limit;\n    const results = {};\n\n    const total_requestedPickups = await RequestPickup.countDocuments({created_at: { $gte: new Date(new Date(startDate).setHours(0, 0, 0)), $lt: new Date(new Date(endDate).setHours(23, 59, 59)) }}).exec();\n\n    if (endIndex <  await RequestPickup.countDocuments({created_at: { $gte: new Date(new Date(startDate).setHours(0, 0, 0)), $lt: new Date(new Date(endDate).setHours(23, 59, 59)) }}).exec()) {\n        results.next = {\n            page: page + 1,\n            limit: limit\n        }\n    }\n\n    if (startIndex > 0) {\n        results.previous = {\n            page: page - 1,\n            limit: limit\n        }\n    }\n    // $gte: new Date(new Date(startDate).setHours(00, 00, 00)),\n    // $lt: new Date(new Date(endDate).setHours(23, 59, 59))\n    RequestPickup.find({ \n        created_at: {\n            $gte: new Date(new Date(startDate).setHours(0, 0, 0)),\n            $lt: new Date(new Date(endDate).setHours(23, 59, 59))\n            //   $gte: new Date(new Date(startDate)),\n            //   $lt: new Date(new Date(endDate))\n               }\n        }).sort('-created_at').limit(limit).skip(startIndex).exec((err, requestedPickups) => {\n        // console.log(\"equipments\", equipments)\n        if (err) {\n            // console.log(\"errrrrrrrrrrrrrrrrrrrrrr\", err);\n            return res.json({error: true, status: 401, message: \"error occured\"})\n        }\n        if (!requestedPickups) {\n            return res.json({error: true, status: 404, message: \"Cant not find requested pickups\"})\n        }\n        return res.json({error: false, status: 201, total_requestedPickups: total_requestedPickups, pagination: results, requestedPickups: requestedPickups, message: \"success!\" });\n    });\n}\n\n\n\n\n\n\n\n\n\n"],"mappings":"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"}